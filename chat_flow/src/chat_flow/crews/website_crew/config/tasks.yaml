website_urls_scraping_task:
  description: >
    Analyze the website at {website_url} and identify all subpage links present on the page.
  expected_output: >
    Return back a filtered list of string urls that are the most relevant. This should be for a pydantic model
    called URLs with a single field in it called "urls" and is of type list[str]. The output format should be in
    "urls": list[str] form
  agent: website_url_scraper

website_urls_selection_task:
  description: >
    Given a list of urls and subpage urls, select up to 10 links from the given list
        that seem to provide information on the website or company's products or services, social media, description,
        locations, business information or any relevant information to the business. Ignore any links that seem like
        they are translations, advertisements, or seem irrelevant.
  expected_output: >
    Return back a filtered list of string urls that are the most relevant. This should be for a pydantic model
    called URLs with a single field in it called "urls" and is of type list[str]. The output format should be in
    "urls": list[str] form
  context: [website_urls_scraping_task]
  agent: website_url_analyst

